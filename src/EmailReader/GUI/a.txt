/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EmailReader.GUI;

import EmailReader.Core.AccountData;
import EmailReader.Core.Protocol;

/**
 *
 * @author Roman Nort
 */
public class AccountDataDialog extends javax.swing.JDialog {

    /**
     * Contains data fields for existing account
     */
    private AccountData accountData;
    private boolean result = true;

    /**
     * Edits existed account
     *
     * @param accountData Existed account data object
     * @param parent Parent window for this dialog
     * @param modal Determines is window modal or not
     */
    public AccountDataDialog(AccountData accountData, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.accountData = accountData;
        PopulateFields();
    }

    public boolean GetResult() {
        return result;
    }

    /**
     * Default c-tor.
     */
    public AccountDataDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.accountData = new AccountData();
        PopulateFields();
    }

    private void PopulateFields() {
        this.tbServerLogin.setText(accountData.Login);
        this.tpPassword.setText(accountData.Password);
        this.tpPasswordConfirmation.setText(accountData.PasswordConfirmation);
        this.tbSmtpHost.setText(accountData.HostOut.Host);
        this.tbSmtpPort.setText(accountData.HostOut.Port);
        this.cbSmtpSsl.setSelected(accountData.HostOut.Ssl);

        if (!accountData.HostIn.Protocl.equals(Protocol.NONE)) {
            Boolean isImap = false;
            if (accountData.HostIn.Protocl.equals(Protocol.IMAP)
                    || accountData.HostIn.Protocl.equals(Protocol.IMAPS)) {
                isImap = true;
            }
            this.rbImap.setSelected(isImap);
            this.rbPop3.setSelected(!isImap);
            if (isImap) {
                this.tbImapHost.setText(accountData.HostIn.Host);
                this.tbImapPort.setText(accountData.HostIn.Port);
                this.cbImapSsl.setSelected(accountData.HostIn.Ssl);
            } else {
                this.tbPop3Host.setText(accountData.HostIn.Host);
                this.tbPop3Port.setText(accountData.HostIn.Port);
                this.cbPop3Ssl.setSelected(accountData.HostIn.Ssl);
            }
        } else {
            this.rbPop3.setSelected(true);
//            this.tbImapHost.setText(accountData.HostIn.Host);
//            this.tbImapPort.setText(accountData.HostIn.Port);
//            this.cbImapSsl.setEnabled(accountData.HostIn.Ssl);
//            this.tbPop3Host.setText(accountData.HostIn.Host);
//            this.tbPop3Port.setText(accountData.HostIn.Port);
//            this.cbPop3Ssl.setEnabled(accountData.HostIn.Ssl);
        }
    }

    /**
     * Saves user changes to accountData field.
     */
    private void SaveChanges() {
        accountData.Login = this.tbServerLogin.getText();
        accountData.Password = new String(this.tpPassword.getPassword());
        //char[] pass = this.tpPasswordConfirmation.getPassword();
        //accountData.Password = new String(pass);
        accountData.HostOut.Host = this.tbSmtpHost.getText();
        accountData.HostOut.Port = this.tbSmtpPort.getText();
        accountData.HostOut.Ssl = this.cbSmtpSsl.isSelected();

        if (this.rbImap.isSelected()) {
            accountData.HostIn.Protocl = Protocol.IMAP;
            accountData.HostIn.Host = this.tbImapHost.getText();
            accountData.HostIn.Port = this.tbImapPort.getText();
            accountData.HostIn.Ssl = this.cbImapSsl.isSelected();
        } else {
            accountData.HostIn.Protocl = Protocol.POP3;
            accountData.HostIn.Host = this.tbPop3Host.getText();
            accountData.HostIn.Port = this.tbPop3Port.getText();
            accountData.HostIn.Ssl = this.cbPop3Ssl.isSelected();
        }
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        grpInProtocol = new javax.swing.ButtonGroup();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tbServerLogin = new javax.swing.JTextField();
        lblServerLogin = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tbSmtpPort = new javax.swing.JTextField();
        cbSmtpSsl = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        tpPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        tpPasswordConfirmation = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        tbSmtpHost = new javax.swing.JTextField();
        tbPop3Host = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tbPop3Port = new javax.swing.JTextField();
        cbPop3Ssl = new javax.swing.JCheckBox();
        tbImapHost = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tbImapPort = new javax.swing.JTextField();
        cbImapSsl = new javax.swing.JCheckBox();
        rbPop3 = new javax.swing.JRadioButton();
        rbImap = new javax.swing.JRadioButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblServerLogin.setText("Server Login");

        jLabel1.setText("Port");

        tbSmtpPort.setText("10");

        cbSmtpSsl.setText("SSL");

        jLabel2.setText("Password");

        jLabel3.setText("Confirmation");

        jLabel4.setText("SMTP Server");

        jLabel6.setText("Port");

        tbPop3Port.setText("10");

        cbPop3Ssl.setText("SSL");

        jLabel8.setText("Port");

        tbImapPort.setText("10");

        cbImapSsl.setText("SSL");

        grpInProtocol.add(rbPop3);
        rbPop3.setSelected(true);
        rbPop3.setText("POP3");

        grpInProtocol.add(rbImap);
        rbImap.setText("IMAP");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbImap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbImapHost, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbImapPort, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbImapSsl))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(tpPasswordConfirmation, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblServerLogin)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tbServerLogin)
                                            .addComponent(tpPassword))))
                                .addGap(14, 14, 14))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(tbSmtpHost)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSmtpSsl))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbPop3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbPop3Host, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbPop3Port, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPop3Ssl)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbServerLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblServerLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tpPasswordConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tbSmtpHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(tbSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSmtpSsl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbPop3Host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tbPop3Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPop3Ssl)
                    .addComponent(rbPop3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbImapHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tbImapPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbImapSsl)
                    .addComponent(rbImap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        SaveChanges();
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        result = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountDataDialog dialog = new AccountDataDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox cbImapSsl;
    private javax.swing.JCheckBox cbPop3Ssl;
    private javax.swing.JCheckBox cbSmtpSsl;
    private javax.swing.ButtonGroup grpInProtocol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblServerLogin;
    private javax.swing.JRadioButton rbImap;
    private javax.swing.JRadioButton rbPop3;
    private javax.swing.JTextField tbImapHost;
    private javax.swing.JTextField tbImapPort;
    private javax.swing.JTextField tbPop3Host;
    private javax.swing.JTextField tbPop3Port;
    private javax.swing.JTextField tbServerLogin;
    private javax.swing.JTextField tbSmtpHost;
    private javax.swing.JTextField tbSmtpPort;
    private javax.swing.JPasswordField tpPassword;
    private javax.swing.JPasswordField tpPasswordConfirmation;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EmailReader.GUI;

import EmailReader.Core.AccountData;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Roman Nort
 */
public class AccountsListDialog extends javax.swing.JDialog {

    /**
     *
     */
    private DefaultListModel<AccountData> accounts;
    private AccountData selectedAccount;
    private Frame parent;
    private boolean result;
    /**
     * Creates new form AccountsListDialog
     */
    public AccountsListDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        accounts = new DefaultListModel<AccountData>();
        this.parent = parent;
    }

    /**
     * Creates new form AccountsListDialog
     */
    public AccountsListDialog(List<AccountData> accounts, Frame parent, boolean modal) {
        this(parent, modal);
        InitialiseListModel(accounts);
        this.lstAccounts.setModel(this.accounts);
    }

    public boolean getResult(){
        return result;
    }
    
    public List<AccountData> GetAccounts()
    {
        return (List<AccountData>)(List<?>)(new ArrayList<>(Arrays.asList(accounts.toArray())));
    }
    
    private void InitialiseListModel(List<AccountData> accounts) {
        for (Iterator<AccountData> it = accounts.iterator(); it.hasNext();) {
            AccountData ad = it.next();
            this.accounts.addElement(ad);
        }
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstAccounts = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnActive = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstAccounts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAccounts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAccountsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstAccounts);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnActive.setText("Active");
        btnActive.setEnabled(false);
        btnActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActive, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnActive))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOk)
                            .addComponent(btnCancel)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        result = true;
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AccountData newAccount = new AccountData();
        AccountDataDialog newDialog = new AccountDataDialog(newAccount, parent, true);
        newDialog.setVisible(true);
        if (newDialog.GetResult()){
            accounts.addElement(newAccount);
            UpdateList();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void lstAccountsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAccountsValueChanged
        // See if this is a listbox selection and the
        // event stream has settled
        if (evt.getSource() == lstAccounts && !evt.getValueIsAdjusting()) {
            this.selectedAccount = (AccountData)lstAccounts.getSelectedValue();
        }
        ToggleEditButtons();
    }//GEN-LAST:event_lstAccountsValueChanged

    private void UpdateList()
    {
        lstAccounts.setModel(accounts);
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
    }
    
    private void ToggleEditButtons()
    {
        boolean value = selectedAccount != null;
        btnEdit.setEnabled(value);
        btnDelete.setEnabled(value);
        btnActive.setEnabled(value);
    }
    
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        AccountData copy = selectedAccount;
        AccountDataDialog dialog = new AccountDataDialog(copy, parent, true);
        dialog.setVisible(true);
        if (dialog.GetResult()){
            selectedAccount = copy;
            UpdateList();                    
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        accounts.removeElement(selectedAccount);
        selectedAccount = null;
        UpdateList();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        result = false;
        this.dispose();        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActiveActionPerformed
        AccountData.ActiveAccount = (AccountData)lstAccounts.getSelectedValue();
    }//GEN-LAST:event_btnActiveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountsListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountsListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountsListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountsListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AccountsListDialog dialog = new AccountsListDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActive;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnOk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstAccounts;
    // End of variables declaration//GEN-END:variables
}
package EmailReader.GUI;

import EmailReader.Core.AccountData;
import EmailReader.Commands.ICommand;
import EmailReader.Commands.MarkMessagesReadCommand;
import EmailReader.Commands.NewMessageCommand;
import EmailReader.Commands.RemoveMessagesCommand;
import EmailReader.Commands.ShowAccountsListCommand;
import EmailReader.Core.CustomTableModel;
import EmailReader.Core.CustomTableRenderer;
import EmailReader.Core.MessagesProvider;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.mail.Message;
import javax.swing.ListSelectionModel;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Roman Nort
 */
public class MainForm extends javax.swing.JFrame {

    private Message[] messages;
    private MessagesProvider provider;
    private List<Message> selectedMessages;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        // We must set ActiveAccount first
        EditAccounts();
        provider = new MessagesProvider();
        UpdateView();

        tabMessages.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                boolean buttonsMode = false;
                if (lsm.isSelectionEmpty()) {
                    selectedMessages = null;
                } else {
                    selectedMessages = new ArrayList<Message>();
                    // Find out which indexes are selected.
                    int minIndex = lsm.getMinSelectionIndex();
                    int maxIndex = lsm.getMaxSelectionIndex();
                    for (int i = minIndex; i <= maxIndex; i++) {
                        if (lsm.isSelectedIndex(i)) {
                            selectedMessages.add(messages[i]);
                        }
                    }
                    buttonsMode = true;
                }
                ToggleButtons(buttonsMode);
            }
        });

        RunUpdateDaemon();
    }

    /**
     *
     * @param mode
     */
    private void ToggleButtons(Boolean mode) {
        this.btnRead.setEnabled(mode);
        this.btnRemove.setEnabled(mode);
        this.btnUnread.setEnabled(mode);
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPaneTable = new javax.swing.JScrollPane();
        tabMessages = new javax.swing.JTable()
        ;
        btnRead = new javax.swing.JButton();
        btnUnread = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnNewMessage = new javax.swing.JButton();
        mbMainFormMenu = new javax.swing.JMenuBar();
        mtFile = new javax.swing.JMenu();
        mtRefresh = new javax.swing.JMenuItem();
        mtCloseConnection = new javax.swing.JMenuItem();
        mtEdit = new javax.swing.JMenu();
        mtAccounts = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(795, 490));

        tabMessages.setDefaultRenderer(Object.class, new CustomTableRenderer(tabMessages));
        tabMessages.setAutoCreateRowSorter(true);
        tabMessages.setModel(new CustomTableModel(null));
        tabMessages.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tabMessages.getTableHeader().setReorderingAllowed(false);
        tabMessages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMessagesMouseClicked(evt);
            }
        });
        ScrollPaneTable.setViewportView(tabMessages);

        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUnread.setText("Unread");
        btnUnread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnreadActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnNewMessage.setText("New message");
        btnNewMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewMessageActionPerformed(evt);
            }
        });

        mbMainFormMenu.setName("mbMainFormMenu"); // NOI18N

        mtFile.setText("File");

        mtRefresh.setText("Refresh");
        mtRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtRefreshActionPerformed(evt);
            }
        });
        mtFile.add(mtRefresh);

        mtCloseConnection.setText("Close Connection");
        mtCloseConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtCloseConnectionActionPerformed(evt);
            }
        });
        mtFile.add(mtCloseConnection);

        mbMainFormMenu.add(mtFile);

        mtEdit.setText("Edit");

        mtAccounts.setText("Accounts");
        mtAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtAccountsActionPerformed(evt);
            }
        });
        mtEdit.add(mtAccounts);

        mbMainFormMenu.add(mtEdit);

        setJMenuBar(mbMainFormMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneTable)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUnread)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addGap(0, 397, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRead)
                    .addComponent(btnUnread)
                    .addComponent(btnRemove)
                    .addComponent(btnNewMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPaneTable, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mtAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtAccountsActionPerformed
        EditAccounts();
    }//GEN-LAST:event_mtAccountsActionPerformed

    private void EditAccounts() {
        ICommand accountSettings = new ShowAccountsListCommand();
        accountSettings.Execute();
    }

    private void mtRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtRefreshActionPerformed

        UpdateView();
    }//GEN-LAST:event_mtRefreshActionPerformed

    private void mtCloseConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtCloseConnectionActionPerformed
        provider.CloseConnection();
    }//GEN-LAST:event_mtCloseConnectionActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        ICommand markMessages = new MarkMessagesReadCommand(selectedMessages, true);
        markMessages.Execute();
        UpdateView();
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnUnreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnreadActionPerformed
        ICommand markMessages = new MarkMessagesReadCommand(selectedMessages, false);
        markMessages.Execute();
        UpdateView();
    }//GEN-LAST:event_btnUnreadActionPerformed

    private void UpdateMessages() {
        SwingWorker<Message[], Message[]> worker = new SwingWorker<Message[], Message[]>() {
            @Override
            protected Message[] doInBackground() {
                Message[] localMessages = provider.GetMessages();
                publish(localMessages);
                messages = localMessages;
                return localMessages;
            }

            @Override
            protected void process(List rowsList) {
                if (rowsList.size() > 0) {
                    tabMessages.setModel(new CustomTableModel(rowsList));
                }
            }
        };
        worker.execute();
    }

    /**
     *
     */
    private void RunUpdateDaemon() {
        Timer timer = new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                UpdateMessages();
            }
        });
        int updateTime = 60000; // one minute;
        timer.setDelay(updateTime);
        timer.start();
    }

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        ICommand removeCommand = new RemoveMessagesCommand(selectedMessages);
        removeCommand.Execute();
        UpdateView();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tabMessagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMessagesMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            int viewindex = tabMessages.getSelectedRow();
            int modelindex = tabMessages.convertRowIndexToModel(viewindex);
            ShowMessageContent(messages[modelindex]);
        }
    }//GEN-LAST:event_tabMessagesMouseClicked

    private void btnNewMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewMessageActionPerformed
        ICommand command = new NewMessageCommand();
        command.Execute();
    }//GEN-LAST:event_btnNewMessageActionPerformed

    /**
     *
     * @param index
     */
    private void ShowMessageContent(Message m) {

        MessageContentDialog mdialog = new MessageContentDialog(m, this, true);
        mdialog.setVisible(true);
    }

    private void UpdateView() {

        if (AccountData.ActiveAccount == null) {
            EditAccounts();
        }
        UpdateMessages();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneTable;
    private javax.swing.JButton btnNewMessage;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUnread;
    private javax.swing.JMenuBar mbMainFormMenu;
    private javax.swing.JMenuItem mtAccounts;
    private javax.swing.JMenuItem mtCloseConnection;
    private javax.swing.JMenu mtEdit;
    private javax.swing.JMenu mtFile;
    private javax.swing.JMenuItem mtRefresh;
    private javax.swing.JTable tabMessages;
    // End of variables declaration//GEN-END:variables
}
package EmailReader.GUI;

import EmailReader.Core.MessageAddressFormatter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Part;

/**
 * Shows message content.
 *
 * @author Roman Nort
 */
public class MessageContentDialog extends javax.swing.JDialog {

    private Message message;
    
    /**
     *
     * @param message
     * @param parent
     * @param modal
     */
    public MessageContentDialog(Message message, java.awt.Frame parent, boolean modal) {
        this(parent, modal);
        this.message = message;
        PopulateFields();
    }

    /**
     *
     * @param parent
     * @param modal
     */
    public MessageContentDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }


    private void PopulateFields() {
        try {

            this.tbTO.setText( MessageAddressFormatter.FormatAll(message.getRecipients(Message.RecipientType.TO)));
            this.tbFrom.setText(MessageAddressFormatter.FormatAll(message.getFrom()));
            this.tbSubject.setText(message.getSubject());
            txtContent.setText(ParseMessageContent());
            
        } catch (MessagingException ex) {
            Logger.getLogger(MessageContentDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * 
     * @return 
     */
    private String ParseMessageContent() {
        String result = "";
        try {
            result = ParsePart(message, 0);
        } catch (MessagingException ex) {
            Logger.getLogger(MessageContentDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MessageContentDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    /**
     * 
     * @param part
     * @param level
     * @return
     * @throws MessagingException
     * @throws IOException 
     */
    private String ParsePart(Part part, Integer level) throws MessagingException, IOException {

        if (part.isMimeType("text/*")) {
            return (String) part.getContent();
        } else if (part.isMimeType("multipart/*")) {
            
            Multipart mp = 
                    (Multipart) part.getContent();
            
            level++;
            int count = mp.getCount();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < count; i++) {
                sb.append(ParsePart(mp.getBodyPart(i), level));
            }
            level--;
            return sb.toString();
        } else if (part.isMimeType("message/rfc822")) {
            level++;
            return ParsePart((Part) part.getContent(), level);
        }
        return "";
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextPane();
        tbTO = new javax.swing.JTextField();
        lblTO = new javax.swing.JLabel();
        tbFrom = new javax.swing.JTextField();
        lblFrom = new javax.swing.JLabel();
        tbSubject = new javax.swing.JTextField();
        lblSubject = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 400));

        txtContent.setEditable(false);
        txtContent.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(txtContent);

        tbTO.setEditable(false);

        lblTO.setText("To");

        tbFrom.setEditable(false);

        lblFrom.setText("From");

        tbSubject.setEditable(false);

        lblSubject.setText("Subject");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTO)
                            .addComponent(lblFrom)
                            .addComponent(lblSubject, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tbFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addComponent(tbSubject)
                            .addComponent(tbTO))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTO))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFrom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessageContentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessageContentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessageContentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageContentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                MessageContentDialog dialog = new MessageContentDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTO;
    private javax.swing.JTextField tbFrom;
    private javax.swing.JTextField tbSubject;
    private javax.swing.JTextField tbTO;
    private javax.swing.JTextPane txtContent;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EmailReader.GUI;

import EmailReader.Core.NewMessageData;

/**
 *
 * @author Roman Nort
 */
public class NewMessageDialog extends javax.swing.JDialog {

    private NewMessageData messageData;
    private boolean isSend = false;

    /**
     * Creates new form NewMessageDialog
     */
    public NewMessageDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbTo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tbCC = new javax.swing.JTextField();
        tbBcc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tbSubject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JEditorPane();
        btnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(625, 455));

        jLabel1.setText("To");

        jLabel2.setText("CC");

        jLabel3.setText("BCC");

        jLabel4.setText("Subject");

        jScrollPane1.setViewportView(txtContent);

        btnSend.setText("SEND");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbTo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbBcc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tbCC)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(tbSubject))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tbTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbBcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        this.isSend = true;

        messageData = new NewMessageData();
        messageData.Bcc = this.tbBcc.getText();
        messageData.Cc = this.tbCC.getText();
        messageData.To = this.tbTo.getText();
        messageData.Subject = this.tbSubject.getText();
        messageData.Content = this.txtContent.getText();

        this.dispose();
    }//GEN-LAST:event_btnSendActionPerformed

    /**
     * 
     * @return 
     */
    public boolean IsSend() {
        return isSend;
    }

    /**
     * 
     * @return 
     */
    public NewMessageData GetData() {
        return messageData;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewMessageDialog dialog = new NewMessageDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tbBcc;
    private javax.swing.JTextField tbCC;
    private javax.swing.JTextField tbSubject;
    private javax.swing.JTextField tbTo;
    private javax.swing.JEditorPane txtContent;
    // End of variables declaration//GEN-END:variables
}
