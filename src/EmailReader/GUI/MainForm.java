/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EmailReader.GUI;

import EmailReader.AccountData;
import EmailReader.Commands.ICommand;
import EmailReader.Commands.ShowAccountsListCommand;
import EmailReader.MessagesProvider;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Roman Nort
 */
public class MainForm extends javax.swing.JFrame {

    private Message[] messages;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        UpdateView();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPaneTree = new javax.swing.JScrollPane();
        trFolders = new javax.swing.JTree();
        ScrollPaneTable = new javax.swing.JScrollPane();
        tabMessages = new javax.swing.JTable();
        mbMainFormMenu = new javax.swing.JMenuBar();
        mtFile = new javax.swing.JMenu();
        mtRefresh = new javax.swing.JMenuItem();
        mtEdit = new javax.swing.JMenu();
        mtAccounts = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(795, 490));

        ScrollPaneTree.setViewportView(trFolders);

        tabMessages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Time", "From", "To", "Subject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabMessages.getTableHeader().setReorderingAllowed(false);
        ScrollPaneTable.setViewportView(tabMessages);

        mbMainFormMenu.setName("mbMainFormMenu"); // NOI18N

        mtFile.setText("File");

        mtRefresh.setText("Refresh");
        mtRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtRefreshActionPerformed(evt);
            }
        });
        mtFile.add(mtRefresh);

        mbMainFormMenu.add(mtFile);

        mtEdit.setText("Edit");

        mtAccounts.setText("Accounts");
        mtAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtAccountsActionPerformed(evt);
            }
        });
        mtEdit.add(mtAccounts);

        mbMainFormMenu.add(mtEdit);

        setJMenuBar(mbMainFormMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPaneTree, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneTable, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneTree, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addComponent(ScrollPaneTable))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mtAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtAccountsActionPerformed
        EditAccounts();
    }//GEN-LAST:event_mtAccountsActionPerformed

    private void EditAccounts()
    {
        ICommand accountSettings = new ShowAccountsListCommand();
        accountSettings.Execute();
    }
    
    private void mtRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtRefreshActionPerformed
        // TODO add your handling code here:
        UpdateView();
    }//GEN-LAST:event_mtRefreshActionPerformed

    private void UpdateView() {
        
        if (AccountData.ActiveAccount == null){
            EditAccounts();
        }
        MessagesProvider provider = new MessagesProvider();
        messages = provider.GetMessages();
        TableModel tabModel = new AbstractTableModel() {
            
            @Override
            public String getColumnName(int col) {
                switch (col) {
                    case 0:
                        return "Date";
                    case 1:
                        return "From";
                    case 2:
                        return "To";
                    case 3:
                        return "Subject";
                    default:
                        return "";
                }
            }

            @Override
            public int getRowCount() {
                return messages.length;
            }

            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public Object getValueAt(int row, int col) {
                try {
                    if (row >= 0 && row < getRowCount()) {
                        switch (col) {
                            case 0:
                                return messages[row].getReceivedDate();
                            case 1:
                                return messages[row].getFrom();
                            case 2:
                                return messages[row].getRecipients(Message.RecipientType.TO);
                            case 3:
                                return messages[row].getSubject();
                            default:
                                return "";
                        }
                    }
                } catch (MessagingException e) {
                    e.printStackTrace();
                }
                return "";
            }

            /**
             * All cells are immutable.
             */
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        tabMessages.setModel(tabModel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneTable;
    private javax.swing.JScrollPane ScrollPaneTree;
    private javax.swing.JMenuBar mbMainFormMenu;
    private javax.swing.JMenuItem mtAccounts;
    private javax.swing.JMenu mtEdit;
    private javax.swing.JMenu mtFile;
    private javax.swing.JMenuItem mtRefresh;
    private javax.swing.JTable tabMessages;
    private javax.swing.JTree trFolders;
    // End of variables declaration//GEN-END:variables
}
